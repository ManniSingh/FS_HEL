{"ast":null,"code":"var _jsxFileName = \"/Users/manni/fullstack/FS_HEL/part5/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Blog from './components/Blog';\nimport Notification from './components/Notification';\nimport blogService from './services/blogs';\nimport loginService from './services/login';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [blogs, setBlogs] = useState([]);\n  const [newBlog, setNewBlog] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [user, setUser] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser');\n\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n      blogService.setToken(user.token);\n      blogService.getAll().then(blogs => setBlogs(blogs));\n    }\n  }, []);\n\n  const addBlog = event => {\n    event.preventDefault();\n    const blogObject = {\n      content: newBlog,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5\n    };\n    blogService.create(blogObject).then(returnedBlog => {\n      setBlogs(blogs.concat(returnedBlog));\n      setNewBlog('');\n    });\n  };\n\n  const handleLogin = async event => {\n    event.preventDefault();\n\n    try {\n      const user = await loginService.login({\n        username,\n        password\n      });\n      window.localStorage.setItem('loggedBlogappUser', JSON.stringify(user));\n      blogService.setToken(user.token);\n      setUser(user);\n      setUsername('');\n      setPassword('');\n    } catch (exception) {\n      setErrorMessage('Wrong credentials');\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n    }\n  };\n\n  const loginForm = () => /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleLogin,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"username\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        name: \"Username\",\n        onChange: ({\n          target\n        }) => setUsername(target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"password\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        name: \"Password\",\n        onChange: ({\n          target\n        }) => setPassword(target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n\n  const handleBlogChange = event => {\n    console.log(event.target.value);\n    setNewBlog(event.target.value);\n  };\n\n  const blogForm = () => /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: addBlog,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: newBlog,\n      onChange: handleBlogChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n\n  if (user === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Log in to application\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), loginForm()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"blogs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [user.name, \" logged-in\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), blogs.map(blog => /*#__PURE__*/_jsxDEV(Blog, {\n      blog: blog\n    }, blog.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"8tkm2N4zths4fe/xBIoaMKfHnQE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/manni/fullstack/FS_HEL/part5/src/App.js"],"names":["React","useState","useEffect","Blog","Notification","blogService","loginService","App","blogs","setBlogs","newBlog","setNewBlog","username","setUsername","password","setPassword","user","setUser","errorMessage","setErrorMessage","loggedUserJSON","window","localStorage","getItem","JSON","parse","setToken","token","getAll","then","addBlog","event","preventDefault","blogObject","content","date","Date","toISOString","important","Math","random","create","returnedBlog","concat","handleLogin","login","setItem","stringify","exception","setTimeout","loginForm","target","value","handleBlogChange","console","log","blogForm","name","map","blog","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,YAAP,MAAyB,kBAAzB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACe,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACiB,YAAD,EAAeC,eAAf,IAAkClB,QAAQ,CAAC,IAAD,CAAhD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMkB,cAAc,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,mBAA5B,CAAvB;;AACA,QAAIH,cAAJ,EAAoB;AAClB,YAAMJ,IAAI,GAAGQ,IAAI,CAACC,KAAL,CAAWL,cAAX,CAAb;AACAH,MAAAA,OAAO,CAACD,IAAD,CAAP;AACAX,MAAAA,WAAW,CAACqB,QAAZ,CAAqBV,IAAI,CAACW,KAA1B;AACAtB,MAAAA,WAAW,CAACuB,MAAZ,GAAqBC,IAArB,CAA0BrB,KAAK,IAC7BC,QAAQ,CAAED,KAAF,CADV;AAGD;AACF,GAVQ,EAUN,EAVM,CAAT;;AAYA,QAAMsB,OAAO,GAAIC,KAAD,IAAW;AACzBA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,UAAU,GAAG;AACjBC,MAAAA,OAAO,EAAExB,OADQ;AAEjByB,MAAAA,IAAI,EAAE,IAAIC,IAAJ,GAAWC,WAAX,EAFW;AAGjBC,MAAAA,SAAS,EAAEC,IAAI,CAACC,MAAL,KAAgB;AAHV,KAAnB;AAMAnC,IAAAA,WAAW,CACRoC,MADH,CACUR,UADV,EAEKJ,IAFL,CAEUa,YAAY,IAAI;AACtBjC,MAAAA,QAAQ,CAACD,KAAK,CAACmC,MAAN,CAAaD,YAAb,CAAD,CAAR;AACA/B,MAAAA,UAAU,CAAC,EAAD,CAAV;AACD,KALH;AAMD,GAdD;;AAgBA,QAAMiC,WAAW,GAAG,MAAOb,KAAP,IAAiB;AACnCA,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAI;AACF,YAAMhB,IAAI,GAAG,MAAMV,YAAY,CAACuC,KAAb,CAAmB;AACpCjC,QAAAA,QADoC;AAC1BE,QAAAA;AAD0B,OAAnB,CAAnB;AAGAO,MAAAA,MAAM,CAACC,YAAP,CAAoBwB,OAApB,CACE,mBADF,EACuBtB,IAAI,CAACuB,SAAL,CAAe/B,IAAf,CADvB;AAGAX,MAAAA,WAAW,CAACqB,QAAZ,CAAqBV,IAAI,CAACW,KAA1B;AACAV,MAAAA,OAAO,CAACD,IAAD,CAAP;AACAH,MAAAA,WAAW,CAAC,EAAD,CAAX;AACAE,MAAAA,WAAW,CAAC,EAAD,CAAX;AACD,KAXD,CAWE,OAAOiC,SAAP,EAAkB;AAClB7B,MAAAA,eAAe,CAAC,mBAAD,CAAf;AACA8B,MAAAA,UAAU,CAAC,MAAM;AACf9B,QAAAA,eAAe,CAAC,IAAD,CAAf;AACD,OAFS,EAEP,IAFO,CAAV;AAGD;AACF,GAnBD;;AAqBA,QAAM+B,SAAS,GAAG,mBAChB;AAAM,IAAA,QAAQ,EAAEN,WAAhB;AAAA,4BACE;AAAA,0CAEI;AACA,QAAA,IAAI,EAAC,MADL;AAEA,QAAA,KAAK,EAAEhC,QAFP;AAGA,QAAA,IAAI,EAAC,UAHL;AAIA,QAAA,QAAQ,EAAE,CAAC;AAAEuC,UAAAA;AAAF,SAAD,KAAgBtC,WAAW,CAACsC,MAAM,CAACC,KAAR;AAJrC;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAUE;AAAA,0CAEI;AACA,QAAA,IAAI,EAAC,UADL;AAEA,QAAA,KAAK,EAAEtC,QAFP;AAGA,QAAA,IAAI,EAAC,UAHL;AAIA,QAAA,QAAQ,EAAE,CAAC;AAAEqC,UAAAA;AAAF,SAAD,KAAgBpC,WAAW,CAACoC,MAAM,CAACC,KAAR;AAJrC;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF,eAmBE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAwBA,QAAMC,gBAAgB,GAAItB,KAAD,IAAW;AAClCuB,IAAAA,OAAO,CAACC,GAAR,CAAYxB,KAAK,CAACoB,MAAN,CAAaC,KAAzB;AACAzC,IAAAA,UAAU,CAACoB,KAAK,CAACoB,MAAN,CAAaC,KAAd,CAAV;AACD,GAHD;;AAKA,QAAMI,QAAQ,GAAG,mBACf;AAAM,IAAA,QAAQ,EAAE1B,OAAhB;AAAA,4BACE;AACE,MAAA,KAAK,EAAEpB,OADT;AAEE,MAAA,QAAQ,EAAE2C;AAFZ;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAWA,MAAIrC,IAAI,KAAK,IAAb,EAAmB;AACjB,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGkC,SAAS,EAFZ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AACD,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,iBAAIlC,IAAI,CAACyC,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAGGjD,KAAK,CAACkD,GAAN,CAAUC,IAAI,iBACb,QAAC,IAAD;AAAoB,MAAA,IAAI,EAAEA;AAA1B,OAAWA,IAAI,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA,YADD,CAHH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAnHD;;GAAMrD,G;;KAAAA,G;AAqHN,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Blog from './components/Blog'\nimport Notification from './components/Notification'\nimport blogService from './services/blogs'\nimport loginService from './services/login' \n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [newBlog, setNewBlog] = useState('')\n  const [username, setUsername] = useState('') \n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null) \n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n      blogService.getAll().then(blogs =>\n        setBlogs( blogs )\n      )\n    }\n  }, [])\n\n  const addBlog = (event) => {\n    event.preventDefault()\n    const blogObject = {\n      content: newBlog,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n    }\n\n    blogService\n      .create(blogObject)\n        .then(returnedBlog => {\n        setBlogs(blogs.concat(returnedBlog))\n        setNewBlog('')\n      })\n  }\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username, password,\n      })\n      window.localStorage.setItem(\n        'loggedBlogappUser', JSON.stringify(user)\n      ) \n      blogService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      setErrorMessage('Wrong credentials')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const loginForm = () => (\n    <form onSubmit={handleLogin}>\n      <div>\n        username\n          <input\n          type=\"text\"\n          value={username}\n          name=\"Username\"\n          onChange={({ target }) => setUsername(target.value)}\n        />\n      </div>\n      <div>\n        password\n          <input\n          type=\"password\"\n          value={password}\n          name=\"Password\"\n          onChange={({ target }) => setPassword(target.value)}\n        />\n      </div>\n      <button type=\"submit\">login</button>\n    </form>      \n  )\n\n  const handleBlogChange = (event) => {\n    console.log(event.target.value)\n    setNewBlog(event.target.value)\n  }\n\n  const blogForm = () => (\n    <form onSubmit={addBlog}>\n      <input\n        value={newBlog}\n        onChange={handleBlogChange}\n      />\n      <button type=\"submit\">save</button>\n    </form>  \n  )\n\n\n  if (user === null) {\n    return (\n      <div>\n        <h2>Log in to application</h2>\n        {loginForm()}\n      </div>\n    )\n  }\n  return (\n    <div>\n      <h2>blogs</h2>\n      <p>{user.name} logged-in</p>\n      {blogs.map(blog =>\n        <Blog key={blog.id} blog={blog} />\n      )}\n    </div>\n  )\n    \n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}